"use strict";

exports.__esModule = true;
exports["default"] = ForceNodes;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Node = _interopRequireDefault(require("./Node"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var ERROR_MESSAGE = "djedi-react: <ForceNodes> children must be <Node> elements, or (nested) arrays/objects of <Node> elements.";
ForceNodes.propTypes = {
  children: _propTypes["default"].oneOfType([_propTypes["default"].element.isRequired, _propTypes["default"].array.isRequired, _propTypes["default"].object.isRequired]).isRequired
};

function ForceNodes(_ref) {
  var children = _ref.children;
  return render(children);
}

function render(item, key) {
  if (key === void 0) {
    key = undefined;
  }

  if (_react["default"].isValidElement(item)) {
    if (item.type !== _Node["default"]) {
      throw new TypeError(ERROR_MESSAGE);
    }

    return _react["default"].cloneElement(item, {
      key: key,
      render: function render() {
        return null;
      }
    });
  }

  if (Array.isArray(item)) {
    return item.map(render);
  }

  if (typeof item === "object" && item != null) {
    return Object.keys(item).map(function (key2) {
      return render(item[key2], key2);
    });
  }

  throw new TypeError(ERROR_MESSAGE);
}